@page "/Users/CreateUser"
@using Microsoft.AspNetCore.WebUtilities
@using System.Text.Json.Serialization
@using System.Text.Json
@inject UserService _userService
@inject NavigationManager NavManager
@inject ILocalStorageService _localStorageService;

<RadzenCard>
 <EditForm Model="user" OnSubmit="onCreate" >
      <RadzenTextBox @bind-Value="user.FirstName"  Placeholder="Naam" Class="w-100"/>
      <RadzenTextBox @bind-Value="user.LastName" Placeholder="Van" Class="w-100"/>
      <RadzenTextBox @bind-Value="user.Email" Placeholder="E-Pos" Class="w-100"/>
      <RadzenButton ButtonType="ButtonType.Submit" style="background-color:blue" Text="OK" ButtonStyle="ButtonStyle.Primary"/>
      </EditForm>
</RadzenCard>



@code {
    UserModel user = new UserModel();
    
    string _action;
    bool newUser = true; 

    string _key;
    
    protected override async Task OnInitializedAsync()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        var queryStrings = QueryHelpers.ParseQuery(uri.Query);
        if(queryStrings.TryGetValue("Key", out var name))
        {
            _key = name;
        }
        if (_key != "")
        {
            user = JsonSerializer.Deserialize<UserModel>(_key);
            newUser = false;
        }
    }
    

    public async Task onCreate()
    {
        if (newUser)
        {
            var res = await _userService.CreateUser(user);
            nav(res);
        }
        else
        {
            var res = await _userService.UpdateUser(user);
            nav(res);
        }
        
    }

    private void nav(bool success)
    {
        NavManager.NavigateTo("/Users");
    }

}